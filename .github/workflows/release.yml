name: release

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - CHANGELOG.md

permissions:
  contents: write
  actions: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Show environment
        run: |
          echo "Workflow is valid and running."
          echo "GITHUB_REF: $GITHUB_REF"
          echo "GITHUB_SHA: $GITHUB_SHA"

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate summary & bundle
        run: |
          set -e
          mkdir -p out
          {
            echo "# Release run"
            echo "SHA=$GITHUB_SHA"
            echo "REF=$GITHUB_REF"
            echo "Actor=$GITHUB_ACTOR"
            echo "Repo=$GITHUB_REPOSITORY"
            echo "RunID=$GITHUB_RUN_ID"
            echo ""
            echo "## Files"
          } > out/session-summary.md
          cp -f CHANGELOG.md out/ 2>/dev/null || true
          ls -al out >> out/session-summary.md
          tar -czf run_bundle.tgz -C out .

      - name: Extract version from CHANGELOG
        id: changelog
        shell: bash
        run: |
          set -euo pipefail
          FILE="CHANGELOG.md"
          if [[ ! -f "$FILE" ]]; then
            echo "CHANGELOG.md not found." >&2
            echo "version=" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          ver=$(grep -m1 -Eo '^## \[[0-9]+\.[0-9]+\.[0-9A-Za-z\.-]*\]' "$FILE" | sed -E 's/^## \[([^\]]+)\].*/\1/')
          if [[ -z "$ver" ]]; then
            echo "Version not found." >&2
            echo "version=" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          echo "version=$ver" >> "$GITHUB_OUTPUT"

      - name: Create tag if missing
        if: steps.changelog.outputs.version != ''
        env:
          VERSION: ${{ steps.changelog.outputs.version }}
        run: |
          set -e
          tag="v${VERSION}"
          if git rev-parse -q --verify "refs/tags/$tag" >/dev/null; then
            echo "Tag $tag already exists."
          else
            git tag -a "$tag" -m "$tag"
            git push origin "$tag"
          fi

      - name: Create/Update GitHub Release
        if: steps.changelog.outputs.version != ''
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.changelog.outputs.version }}
          name: v${{ steps.changelog.outputs.version }}
          body_path: CHANGELOG.md
          files: |
            run_bundle.tgz
            out/**
          draft: false
          prerelease: false
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}